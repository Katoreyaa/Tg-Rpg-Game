import asyncio
import logging
import sys
from os import getenv

from aiogram import Bot, Dispatcher
from aiogram.filters import CommandStart
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
import random

from classes import Create_Enemy, Player, Enemy

TOKEN = "8415236368:AAFgvzQWi4QvHP9RjIDnRuUtXCPKBbITnao"

def start_fight_encounter(Player, Enemy):
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="Атаковать", callback_data="attack"),
            InlineKeyboardButton(text="Защищаться", callback_data="defend"),
        ]
        ])
        @dp.message(text="Перед вами враг! Что вы делате?", reply_markup=keyboard)

        @dp.callback_query()
        async def player_decision_handler(callback: CallbackQuery):
            if callback.data == "attack":
                Player.attack(Enemy)
                await bot.send_message(f"Вы атаковали врага! у врага осталось {Enemy.health} очков жизни")
            if callback.data == "defend":
                Enemy.attack(Player)
                await bot.send_message(f"Враг атакует! Защищайтесь! У вас остаётся {Player.health} очков жизни")


enemy = Create_Enemy()
player = Player(200, 20, 5)

bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="Да", callback_data="fight"),
            InlineKeyboardButton(text="Нет", callback_data="none"),
        ]
    ])
    await message.answer(
        text="Хотите сразиться с врагом или нет?", reply_markup=keyboard)

@dp.callback_query()
async def is_fight(callback: CallbackQuery):
    if callback.data == "fight":
        start_fight_encounter(player, enemy)
    if callback.data == "none":
        bot.send_message("Вы прошли мимо")


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__": 
    asyncio.run(main())


